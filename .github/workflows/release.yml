name: Release

on:
  workflow_dispatch:

  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: fiap-irango-ecr

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

  build:
    name: Build Docker Image
    needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      image_uri: ${{ steps.image_name.outputs.image_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - id: login_ecr
        name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - id: get_branch
        name: Extract branch name
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - id: image_name
        name: Create image name
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          REPO_NAME: ${{ github.event.repository.name }}
          BRANCH_NAME: ${{ steps.get_branch.outputs.branch }}
          IMAGE_HASH: ${{ github.sha }}
        run: echo "image_name=${ECR_REGISTRY}/${ECR_REPOSITORY}:${REPO_NAME}_${BRANCH_NAME}_${IMAGE_HASH}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        env:
          BUNDLE_GITHUB__COM: ${{ secrets.BUNDLE_GITHUB__COM }}
          DOCKERFILE_PATH: Dockerfile
          IMAGE_NAME: ${{ steps.image_name.outputs.image_name }}
        run: |
          docker build \
            --build-arg BUNDLE_GITHUB__COM=${BUNDLE_GITHUB__COM} \
            -f ${DOCKERFILE_PATH} \
            -t ${IMAGE_NAME} .

      - name: Push image to ECR
        run: |
          docker push ${{ steps.image_name.outputs.image_name }}
